{"version":3,"sources":["src/languages/fi.js"],"names":["$","i18n","languages","fi","extend","convertGrammar","word","form","aou","match","origWord","slice","jQuery"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAME,WAAWA,CAAX,EAAe;AAChB;;AAEAA,EAAAA,CAAC,CAACC,IAAF,CAAOC,SAAP,CAAiBC,EAAjB,GAAsBH,CAAC,CAACI,MAAF,CAAU,EAAV,EAAcJ,CAAC,CAACC,IAAF,CAAOC,SAAP,CAAkB,SAAlB,CAAd,EAA6C;AAClEG,IAAAA,cAAc,EAAE,wBAAWC,IAAX,EAAiBC,IAAjB,EAAwB;AACvC;AACA,UAAIC,GAAG,GAAGF,IAAI,CAACG,KAAL,CAAY,gBAAZ,CAAV;AAAA,UACCC,QAAQ,GAAGJ,IADZ;;AAEA,UAAKA,IAAI,CAACG,KAAL,CAAY,QAAZ,CAAL,EAA8B;AAC7BD,QAAAA,GAAG,GAAG,KAAN;AACA,OANsC,CAQvC;;;AACA,UAAKF,IAAI,CAACG,KAAL,CAAY,0BAAZ,CAAL,EAAgD;AAC/CH,QAAAA,IAAI,IAAI,GAAR;AACA;;AAED,cAASC,IAAT;AACC,aAAK,UAAL;AACCD,UAAAA,IAAI,IAAI,GAAR;AACA;;AACD,aAAK,SAAL;AACCA,UAAAA,IAAI,IAAME,GAAG,GAAG,KAAH,GAAW,KAAxB;AACA;;AACD,aAAK,WAAL;AACCF,UAAAA,IAAI,IAAME,GAAG,GAAG,GAAH,GAAS,GAAtB;AACA;;AACD,aAAK,UAAL;AACA;AACCF,UAAAA,IAAI,IAAIA,IAAI,CAACK,KAAL,CAAY,CAAC,CAAb,IAAmB,GAA3B;AACA;;AACD,aAAK,UAAL;AACCL,UAAAA,IAAI,IAAME,GAAG,GAAG,KAAH,GAAW,KAAxB;AACA;;AACD;AACCF,UAAAA,IAAI,GAAGI,QAAP;AACA;AAnBF;;AAsBA,aAAOJ,IAAP;AACA;AArCiE,GAA7C,CAAtB;AAuCA,CA1CC,EA0CCM,MA1CD,CAAF","file":"fi.934dc78f.map","sourceRoot":"../src","sourcesContent":["/**\n * Finnish (Suomi) language functions\n *\n * @author Santhosh Thottingal\n */\n\n( function ( $ ) {\n\t'use strict';\n\n\t$.i18n.languages.fi = $.extend( {}, $.i18n.languages[ 'default' ], {\n\t\tconvertGrammar: function ( word, form ) {\n\t\t\t// vowel harmony flag\n\t\t\tvar aou = word.match( /[aou][^äöy]*$/i ),\n\t\t\t\torigWord = word;\n\t\t\tif ( word.match( /wiki$/i ) ) {\n\t\t\t\taou = false;\n\t\t\t}\n\n\t\t\t// append i after final consonant\n\t\t\tif ( word.match( /[bcdfghjklmnpqrstvwxz]$/i ) ) {\n\t\t\t\tword += 'i';\n\t\t\t}\n\n\t\t\tswitch ( form ) {\n\t\t\t\tcase 'genitive':\n\t\t\t\t\tword += 'n';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'elative':\n\t\t\t\t\tword += ( aou ? 'sta' : 'stä' );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'partitive':\n\t\t\t\t\tword += ( aou ? 'a' : 'ä' );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'illative':\n\t\t\t\t// Double the last letter and add 'n'\n\t\t\t\t\tword += word.slice( -1 ) + 'n';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'inessive':\n\t\t\t\t\tword += ( aou ? 'ssa' : 'ssä' );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tword = origWord;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn word;\n\t\t}\n\t} );\n}( jQuery ) );\n"]}