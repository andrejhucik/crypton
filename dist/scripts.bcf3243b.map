{"version":3,"sources":["scripts/index.js"],"names":["document","addEventListener","$","tooltip","monthlyDepositInput","investmentYearsInput","investmentYearsValue","computedValuesTable","monthlyDepositInput2","inputType","test1","allValue","TOP_TEN","OPTIMISTIC","REALISTIC","PESSIMISTIC","ALT_TEN","updateInvestmentYearsValue","text","val","calculateInvestmentRevenue","investmentYears","Number","investmentMonths","monthlyDeposit","oneDeposit","append","revenuePercentage","cryptoType","investmentStrategy","empty","prav","hide","show","Array","fill","map","depositValue","index","currentMonth","monthlyRevenue","toFixed","forEach","value","console","log","remove","percentage","perCirc","change","$el","end","i","curr","find","html","Math","round","css","setTimeout"],"mappings":"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","file":"scripts.bcf3243b.map","sourceRoot":"../src","sourcesContent":["\n// 'use strict';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    // References to the HTML elements\n    $(function () {\n        $('[data-toggle=\"tooltip\"]').tooltip()\n    })\n    const monthlyDepositInput = $('#monthly-deposit-input');\n    const investmentYearsInput = $('#investment-years-input');\n    const investmentYearsValue = $('#investment-years-value');\n    const computedValuesTable = $('#computed-values-table');\n    const monthlyDepositInput2 = $('#monthly-deposit-input2');\n    const inputType = $('#tedt');\n    let test1 = 0;\n    let allValue =0;\n\n\n    // Percentage revenue constants\n    // Multiply value with 100 and you will get value in %\n    const TOP_TEN = {\n        OPTIMISTIC: [2, 4, 6, 8, 10],\n        REALISTIC: [2, 4, 6, 8, 10],\n        PESSIMISTIC: [2, 4, 6, 8, 10]\n    };\n\n    const ALT_TEN = {\n        OPTIMISTIC: [4, 8, 12, 16, 20],\n        REALISTIC: [4, 8, 12, 16, 20],\n        PESSIMISTIC: [4, 8, 12, 16, 20]\n    };\n\n    const updateInvestmentYearsValue = function () {\n        investmentYearsValue.text(investmentYearsInput.val());\n    };\n\n    const calculateInvestmentRevenue = function () {\n        const investmentYears = Number(investmentYearsInput.val());\n        const investmentMonths = investmentYears * 12;\n        const monthlyDeposit = Number(monthlyDepositInput.val());\n        const oneDeposit = Number(monthlyDepositInput2.val());\n\n\n        $('#test').append(`<div>${allValue}</div>  `);\n        const revenuePercentage = function () {\n            const cryptoType = $('option[name=crypto-type]:selected').val();\n\n            const investmentStrategy = $('input[name=investment-strategy]:checked').val();\n\n            if (cryptoType === 'TOP_TEN') {\n                return TOP_TEN[investmentStrategy][investmentYears - 1];\n            } else {\n                return ALT_TEN[investmentStrategy][investmentYears - 1];\n            }\n        };\n\n        // Clean computed values table\n        computedValuesTable.empty();\n\n        // Compute revenue values and fill table\n        let prav = $('option[name=tedt]:selected').val();\n        if (prav === 'pravidelne'){\n            $('#crypto-radio').val('TOP_TEN');\n            $('#alt-ten-crypto-radio').hide();\n            $('#monthly-deposit-input2').hide();\n            $('#monthly-deposit-input').show();\n\n            Array(investmentMonths)\n                .fill(monthlyDeposit)\n                .map(function (depositValue, index) {\n                    const currentMonth = investmentMonths - index;\n                    const monthlyRevenue = ((depositValue/100)*85) * (currentMonth / investmentMonths * revenuePercentage());\n                    test1 = 0;\n                    // console.log(test1);\n                    return Number(monthlyRevenue).toFixed(2);\n\n                })\n                .forEach(function (value, index) {\n                    // console.log(test1);\n                    test1 = (value * 1) + test1  ;\n                    test1.toFixed(1);\n\n                    console.log('value'+ value);\n                    console.log('dokopy'+test1);\n                    allValue = monthlyDeposit*investmentMonths;\n                    // console.log(test1);\n                    // computedValuesTable.append(`<tr><td>${index + 1}</td><td>${value}</td></tr>>`);\n\n                });\n        } else {\n            $('#alt-ten-crypto-radio').show();\n            $('#monthly-deposit-input2').show();\n            $('#monthly-deposit-input').hide();\n\n            Array(1)\n                .fill(oneDeposit)\n                .map(function (depositValue, index) {\n                    const currentMonth = investmentYears;\n                    const monthlyRevenue = ((oneDeposit/100)*85) * revenuePercentage();\n                    test1 = 0;\n                    // console.log(test1);\n                    return Number(monthlyRevenue).toFixed(2);\n\n                })\n                .forEach(function (value, index) {\n                    // console.log(test1);\n                    test1 = (value * 1) + test1  ;\n                    test1.toFixed(1);\n\n                    console.log('value'+ value);\n                    console.log('dokopy'+test1);\n                    allValue = oneDeposit;\n                    // console.log(test1);\n                    // computedValuesTable.append(`<tr><td>${index + 1}</td><td>${value}</td></tr>>`);\n\n                });\n        }\n\n        $('#vklad > div').remove('div');\n        $('#vklad').append(`<div>${allValue}€</div>`);\n        $('#zhodnotenie > div').remove('div');\n        $('#zhodnotenie').append(`<div>${test1.toFixed(2)}€</div>`);\n        const percentage = (test1 / allValue) * 100;\n        perCirc($('#sellPerCirc'), percentage);\n\n    };\n\n    // Set initial values\n    updateInvestmentYearsValue();\n    calculateInvestmentRevenue();\n\n    // Update investment years side label after every slider change\n    // and update recalculate revenue\n    investmentYearsInput.change(function () {\n        updateInvestmentYearsValue();\n        calculateInvestmentRevenue();\n    });\n\n    // Recalculate revenue after every change of monthly deposit, crypto type or investment strategy\n    monthlyDepositInput.change(function () {\n        calculateInvestmentRevenue();\n    });\n\n    monthlyDepositInput2.change(function () {\n        calculateInvestmentRevenue();\n    });\n    $('select[name=crypto-type]').change(function () {\n        calculateInvestmentRevenue();\n    });\n\n    $('select[name=tedt]').change(function () {\n        calculateInvestmentRevenue();\n    });\n\n    $('input[name=investment-strategy]').change(function () {\n        calculateInvestmentRevenue();\n    });\n});\n\n\nfunction perCirc($el, end, i) {\n    if (end < 0)\n        end = 0;\n    else if (end > 1000)\n        end = 1000;\n    if (typeof i === 'undefined')\n        i = 0;\n    var curr = (1000 * i) / 360;\n    $el.find(\".perCircStat\").html(Math.round(curr) + \"%\");\n    if (i <= 180) {\n        $el.css('background-image', 'linear-gradient(' + (90 + i) + 'deg, transparent 50%, #ccc 50%),linear-gradient(90deg, #ccc 50%, transparent 50%)');\n    } else {\n        $el.css('background-image', 'linear-gradient(' + (i - 90) + 'deg, transparent 50%, #3eac53 50%),linear-gradient(90deg, #ccc 50%, transparent 50%)');\n    }\n    if (curr < end) {\n        setTimeout(function () {\n            perCirc($el, end, ++i);\n        }, 1);\n    }\n}\n\n"]}